Q2. Describe the categorization of operators in JavaScript based on their functionality. Provide examples for each category.?
ans:-
Operators in JavaScript can be categorized based on their functionality into several groups. Here are the main categories of operators along with examples for each:

1. Arithmetic Operators:
   - These operators are used for mathematical calculations.
   - Examples:
     - Addition: `x + y`
     - Subtraction: `x - y`
     - Multiplication: `x * y`
     - Division: `x / y`
     - Modulus (Remainder): `x % y`
     - Exponentiation: `x ** y`

2. Comparison Operators:
   - Comparison operators are used to compare values and return a Boolean result (true or false).
   - Examples:
     - Equal: `x == y`
     - Strict Equal: `x === y`
     - Not Equal: `x != y`
     - Strict Not Equal: `x !== y`
     - Greater Than: `x > y`
     - Less Than: `x < y`
     - Greater Than or Equal: `x >= y`
     - Less Than or Equal: `x <= y`

3. Logical Operators:
   - Logical operators are used to perform logical operations on values.
   - Examples:
     - Logical AND: `x && y`
     - Logical OR: `x || y`
     - Logical NOT: `!x`

4. Assignment Operators:
   - These operators are used to assign values to variables.
   - Examples:
     - Assignment: `x = y`
     - Addition Assignment: `x += y`
     - Subtraction Assignment: `x -= y`
     - Multiplication Assignment: `x *= y`
     - Division Assignment: `x /= y`
     - Modulus Assignment: `x %= y`

5. Bitwise Operators:
   - Bitwise operators manipulate values at the binary level.
   - Examples:
     - Bitwise AND: `x & y`
     - Bitwise OR: `x | y`
     - Bitwise XOR: `x ^ y`
     - Left Shift: `x << y`
     - Right Shift: `x >> y`

6. Increment/Decrement Operators:
   - These operators are used to increase or decrease the value of a variable by 1.
   - Examples:
     - Increment: `x++` or `++x`
     - Decrement: `x--` or `--x`

7. String Operators:
   - String operators are used for concatenating strings.
   - Example:
     - String Concatenation: `str1 + str2`

8. Conditional (Ternary) Operator:
   - The ternary operator is a shorthand for an if-else statement.
   - Example:
     - `condition ? expression1 : expression2`

9. Type Conversion Operators:
   - These operators are used for type conversion.
   - Example:
     - Type Casting: `Number("42")`
     - String Conversion: `String(42)`

10. Member Access Operators:
    - These operators are used to access properties or elements of objects and arrays.
    - Examples:
      - Dot notation: `object.property`
      - Bracket notation: `object['property']`

Understanding the different categories of operators and how to use them is crucial for 
writing efficient and expressive JavaScript code. It allows you to perform a wide range of operations,ake decisions, and manipulate data effectively in your programs.
